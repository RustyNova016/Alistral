[workspace]
members = [
    "alistral_cli",
    "alistral_core", 
    "interzic", 
    "musicbrainz_db_lite", 
    "musicbrainz_db_lite/musicbrainz_db_lite_macros", 
    "musicbrainz_db_lite/musicbrainz_db_lite_schema",
    "tuillez"
]
resolver = "3"


# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"


[workspace.lints.rust]
unsafe_code = "forbid"

[workspace.lints.clippy]
#pedantic = "deny"
#nursery = "deny"
#perf = "warn"
#cargo = "warn"

# Applied
enum_glob_use = { level = "deny", priority = 1 }
semicolon_if_nothing_returned = { level = "warn", priority = 1 }
use_self = { level = "warn", priority = 1 }
or_fun_call = { level = "warn", priority = 1 }
match_same_arms = { level = "warn", priority = 1 }
manual_string_new = { level = "warn", priority = 1 }
doc_markdown = { level = "warn", priority = 1 }
uninlined_format_args = { level = "warn", priority = 1 }
explicit_iter_loop = { level = "warn", priority = 1 }
allow_attributes = { level = "warn", priority = 1 }
suboptimal_flops= { level = "warn", priority = 1 }

#unwrap_used = { level = "warn", priority = 1 } # Fix needed in separate PR

# Won't apply... Yet
must_use_candidate = { level = "allow", priority = 1 }
map_unwrap_or = { level = "allow", priority = 1 }

# # Config for 'cargo dist'
# [workspace.metadata.dist]
# # The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
# cargo-dist-version = "0.11.1"
# # CI backends to support
# ci = ["github"]
# # The installers to generate for each app
# installers = ["shell", "powershell"]
# # Target platforms to build apps for (Rust target-triple syntax)
# targets = [
#     "aarch64-apple-darwin",
#     "x86_64-apple-darwin",
#     "x86_64-unknown-linux-gnu",
#     "x86_64-pc-windows-msvc",
# ]
# # Publish jobs to run in CI
# pr-run-mode = "plan"