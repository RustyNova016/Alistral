name: Rust

on:
  push:
    branches: [ "master*", "develop", "develop*"]
  pull_request:
    branches: [ "master*", "develop", "develop*" ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1

jobs:
  stable_tests:
    env: 
      SQLX_OFFLINE: true
    runs-on: ${{ matrix.os }}
    needs: clippy
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v5

      - run: rustup toolchain install stable --profile minimal --no-self-update

      - uses: Swatinem/rust-cache@v2
        with: 
          key: "(${{ matrix.os }})"

      - uses: taiki-e/install-action@cargo-hack
        
      - name: Run tests
        run: cargo hack test --all-features --ignore-private

  clippy:
    env: 
      SQLX_OFFLINE: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      # Install minimal toolchain
      - name: Install minimal stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - uses: taiki-e/install-action@cargo-hack

      - name: Run clippy
        run: cargo hack clippy --feature-powerset -- -D warnings

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/install@cargo-docs-rs
      - run: cargo doc --all-features --no-deps --document-private-items

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      # Install minimal toolchain
      - name: Install minimal stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Run rustfmt
        run: cargo fmt --all --check

  # This is just a curtesy check to tell whether it should be breaking changes or not
  # If CI fail because of this, just bump the version
  msrv:
    env: 
      SQLX_OFFLINE: true
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - uses: Swatinem/rust-cache@v2

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-msrv
      run: cargo install cargo-msrv --all-features

    - name: Run cargo-msrv
      run: /bin/bash ./scripts/ci/msrv.sh

  
  minimum_versions:
    env: 
      SQLX_OFFLINE: true
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: dtolnay/rust-toolchain@nightly
    - uses: Swatinem/rust-cache@v2
    - uses: taiki-e/install-action@cargo-hack
    - uses: taiki-e/install-action@cargo-minimal-versions
    - name: Run cargo-minimal-versions
      run: /bin/bash ./scripts/ci/minimum_versions.sh

  # semver_checks:
  #   env: 
  #     SQLX_OFFLINE: true
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v5
  #   - name: Install cargo-semver-checks
  #     run: cargo install cargo-semver-checks --locked
  #   - name: Run cargo-semver-checks
  #     run: /bin/bash ./scripts/ci/sem_ver.sh

  dependancies:
    env: 
      SQLX_OFFLINE: true
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Install cargo-machete
      run: cargo install cargo-machete --locked
    - name: Run cargo-machete
      run: /bin/bash ./scripts/ci/udeps.sh